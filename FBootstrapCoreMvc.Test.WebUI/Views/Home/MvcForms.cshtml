@using FBootstrapCoreMvc.Test.WebUI.Models.MvcTests;
@model Customer
@{
    var genderOpts = (SelectList)ViewBag.GenderOptions;
}
@using (Html.Bootstrap().Container().SetResponsive(ContainerSize.Small).Begin())
{
    @Html.Bootstrap().Heading1("Form Default")
    using (var form = Html.Bootstrap().Form("Submit", "Home", FormMethod.Post).Begin())
    {
        @form.InputFor(model => model.Name).SetMaxLength(50)
        @form.InputFor(model => model.Surname).SetMaxLength(50)
        @form.TextAreaFor(model => model.Description).SetMaxLength(200)
        @form.SelectFor(model => model.Gender, genderOpts)
        @form.CheckFor(model => model.IsMarried)
        @form.PasswordFor(model => model.Password).SetMaxLength(16).IsRequired()
        @form.Submit()
    }
    <hr />
    @Html.Bootstrap().Heading1("Form Controls With Labels")
    using (var form = Html.Bootstrap().Form("Submit", "Home", FormMethod.Post).SetConfirm("confirm submit?").Begin())
    {
        @form.InputFor(model => model.Name).SetMaxLength(50).SetLabel("Name")
        @form.InputFor(model => model.Surname).SetMaxLength(50).SetLabel("Surname")
        @form.TextAreaFor(model => model.Description).SetMaxLength(200).SetLabel("Description")
        @form.SelectFor(model => model.Gender, genderOpts).SetLabel("Gender")
        @form.CheckFor(model => model.IsMarried).SetLabel("Married")
        @form.PasswordFor(model => model.Password).SetLabel("Password").SetMaxLength(16).IsRequired()
        @form.Submit()
    }
    <hr />
    @Html.Bootstrap().Heading1("Form Controls With Floating Labels")
    using (var form = Html.Bootstrap().Form("Submit", "Home", FormMethod.Post).SetConfirm("confirm submit?").Begin())
    {
        @form.InputFor(model => model.Name).SetMaxLength(50).SetFloatingLabel("Name")
        @form.InputFor(model => model.Surname).SetMaxLength(50).SetFloatingLabel("Surname")
        @form.TextAreaFor(model => model.Description).SetMaxLength(200).SetFloatingLabel("Description")
        @form.SelectFor(model => model.Gender, genderOpts).SetFloatingLabel("Gender")
        @form.CheckFor(model => model.IsMarried).SetFloatingLabel("Married")
        @form.PasswordFor(model => model.Password).SetFloatingLabel("Password").SetMaxLength(16).IsRequired()
        @form.Submit()
    }
    <hr />
    @Html.Bootstrap().Heading1("Form-Example-With-Grid")
    @using (var form = Html.Bootstrap().Form("Submit", "Home", FormMethod.Get).Begin())
    {
        using (var grid = Html.Bootstrap().Container().AddCss(Css.Mb3, Css.Mt3).Begin())
        {
            using (var row = grid.Row().Begin())
            {
                using (row.Column().Begin())
                {
                    @form.Select("isActive", genderOpts).SetLabel("Gender")
                }
                using (row.Column().Begin())
                {
                    @Html.Bootstrap().Button("Filter").SetType(ButtonType.Submit).SetIcon(IconType.Filter)
                }
            }
        }
    }
    <hr />
    @Html.Bootstrap().Heading1("Form Example Complex")
    @using (var form = Html.Bootstrap().Form("Submit", "Home", FormMethod.Post, new { area = "Admin" }).AddCss("form-signin").Begin())
    {
        @form.InputFor(model => model.Email).SetFloatingLabel("Email").SetMaxLength().IsRequired().AutoFocus()
        @form.PasswordFor(model => model.Password).SetFloatingLabel("Password").SetMaxLength(16).IsRequired()
        @form.CheckBox("RememberMe", "Remember Me").SetReadonly()
        @using (Html.Bootstrap().Container().TextCenter().Begin())
        {
            <div class="row mb-3 mt-3">
                <div class="col">
                    @form.Submit("Signin", ButtonState.Primary, "Login")
                </div>
                <div class="col">
                    @Html.Bootstrap().LinkButton("Signup", "Signup", "Home")
                </div>
            </div>
        }
    }
}